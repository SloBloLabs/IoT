[
    {
        "id": "52721e447cd68db3",
        "type": "tab",
        "label": "Enphase",
        "disabled": false,
        "info": "https://decramy.net/2021/08/Enphase-Envoy-S-Metered-to-InfluxDB-using-Nodered.html",
        "env": []
    },
    {
        "id": "830c8b80.f89718",
        "type": "inject",
        "z": "52721e447cd68db3",
        "name": "Start / Restart / Unpause stream",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1728000",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 300,
        "y": 300,
        "wires": [
            [
                "5944b091.17285"
            ]
        ]
    },
    {
        "id": "de79afb2.f459b",
        "type": "inject",
        "z": "52721e447cd68db3",
        "name": "Pause stream",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 350,
        "y": 420,
        "wires": [
            [
                "31c2c1a4.b6aabe"
            ]
        ]
    },
    {
        "id": "31c2c1a4.b6aabe",
        "type": "change",
        "z": "52721e447cd68db3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "pause",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 420,
        "wires": [
            [
                "50364aa0.f4b3d4"
            ]
        ]
    },
    {
        "id": "fc7709e7.f95788",
        "type": "inject",
        "z": "52721e447cd68db3",
        "name": "Stop stream",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 350,
        "y": 380,
        "wires": [
            [
                "fc633663.b0ce48"
            ]
        ]
    },
    {
        "id": "fc633663.b0ce48",
        "type": "change",
        "z": "52721e447cd68db3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "stop",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 380,
        "wires": [
            [
                "50364aa0.f4b3d4"
            ]
        ]
    },
    {
        "id": "50364aa0.f4b3d4",
        "type": "sse-client",
        "z": "52721e447cd68db3",
        "name": "",
        "url": "http://192.168.178.4/stream/meter",
        "events": [
            "message"
        ],
        "headers": {},
        "proxy": "",
        "restart": true,
        "rejectUnauthorized": false,
        "withCredentials": true,
        "timeout": "100",
        "x": 810,
        "y": 400,
        "wires": [
            [
                "6fa504f8fca90df3"
            ]
        ]
    },
    {
        "id": "5944b091.17285",
        "type": "http request",
        "z": "52721e447cd68db3",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://envoy/ivp/meters",
        "tls": "a0af54c0.3a7438",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "bearer",
        "senderr": false,
        "headers": [],
        "x": 550,
        "y": 300,
        "wires": [
            [
                "5e0c1620.061b18"
            ]
        ]
    },
    {
        "id": "5e0c1620.061b18",
        "type": "function",
        "z": "52721e447cd68db3",
        "name": "Set Cookie",
        "func": "msg.headers = {'Cookie': 'sessionId=' + msg.responseCookies.sessionId.value};\nflow.set(\"sessionHeader\", msg.headers);\n\nflow.set(\"messageCount\", 0);\n\nlet now = new Date();\nlet startTime = now.getTime();\nflow.set(\"startTime\", startTime); // in milliseconds\n\nnode.status({ fill: \"green\", shape: \"ring\", text: \"Cookie: \" + msg.responseCookies.sessionId.value + \", startTime: \" + now.toLocaleString(\"de-DE\") });\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 300,
        "wires": [
            [
                "50364aa0.f4b3d4"
            ]
        ]
    },
    {
        "id": "6fa504f8fca90df3",
        "type": "json",
        "z": "52721e447cd68db3",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 270,
        "y": 520,
        "wires": [
            [
                "3a30b6f605c84af2"
            ]
        ],
        "info": "{\n    \"event\": \"message\",\n    \"payload\": {\n        \"production\": {\n            \"ph-a\": {\n                \"p\": -2.799,\n                \"q\": 128.69,\n                \"s\": 133.345,\n                \"v\": 235.871,\n                \"i\": 0.566,\n                \"pf\": 0,\n                \"f\": 50.06\n            },\n            \"ph-b\": {\n                \"p\": -2.225,\n                \"q\": 142.044,\n                \"s\": 142.044,\n                \"v\": 237.275,\n                \"i\": 0.599,\n                \"pf\": 0,\n                \"f\": 50.06\n            },\n            \"ph-c\": {\n                \"p\": -3.357,\n                \"q\": 146.776,\n                \"s\": 150.621,\n                \"v\": 237.164,\n                \"i\": 0.634,\n                \"pf\": 0,\n                \"f\": 50.06\n            }\n        },\n        \"net-consumption\": {\n            \"ph-a\": {\n                \"p\": 205.099,\n                \"q\": -217.1,\n                \"s\": 348.172,\n                \"v\": 236.061,\n                \"i\": 1.474,\n                \"pf\": 0.56,\n                \"f\": 50\n            },\n            \"ph-b\": {\n                \"p\": 215.973,\n                \"q\": -156.338,\n                \"s\": 273.732,\n                \"v\": 237.492,\n                \"i\": 1.153,\n                \"pf\": 0.81,\n                \"f\": 50\n            },\n            \"ph-c\": {\n                \"p\": 15.529,\n                \"q\": -185.114,\n                \"s\": 198.776,\n                \"v\": 237.309,\n                \"i\": 0.837,\n                \"pf\": 0.07,\n                \"f\": 50\n            }\n        },\n        \"total-consumption\": {\n            \"ph-a\": {\n                \"p\": 202.301,\n                \"q\": -345.791,\n                \"s\": 481.377,\n                \"v\": 235.966,\n                \"i\": 2.04,\n                \"pf\": 0.42,\n                \"f\": 50.03\n            },\n            \"ph-b\": {\n                \"p\": 213.748,\n                \"q\": -298.382,\n                \"s\": 416.01,\n                \"v\": 237.383,\n                \"i\": 1.752,\n                \"pf\": 0.51,\n                \"f\": 50.03\n            },\n            \"ph-c\": {\n                \"p\": 12.171,\n                \"q\": -331.89,\n                \"s\": 348.895,\n                \"v\": 237.236,\n                \"i\": 1.471,\n                \"pf\": 0.03,\n                \"f\": 50.03\n            }\n        }\n    },\n    \"_msgid\": \"30c4f329fc74c69f\"\n}"
    },
    {
        "id": "29e442028acaef29",
        "type": "function",
        "z": "52721e447cd68db3",
        "name": "reconstruct data",
        "func": "// Influx:\n// If msg.payload is an array containing two objects, \n// the first object will be written as the set of \n// named fields, the second is the set of named tags.\n\n//{\n//    \"event\": \"message\",\n//    \"payload\": {\n//        \"p\": -2.637,\n//        \"q\": 129.101,\n//        \"s\": 134.177,\n//        \"v\": 236.605,\n//        \"i\": 0.566,\n//        \"pf\": 0,\n//        \"f\": 50\n//    },\n//    \"parts\": {\n//        \"parts\": {\n//            \"id\": \"81ae3e03de25e83d\",\n//            \"type\": \"object\",\n//            \"key\": \"production\",\n//            \"index\": 0,\n//            \"count\": 3\n//        },\n//        \"id\": \"261188553298706d\",\n//        \"type\": \"object\",\n//        \"key\": \"ph-a\",\n//        \"index\": 0,\n//        \"count\": 3\n//    },\n//    \"topic\": \"production\",\n//    \"phase\": \"ph-a\",\n//    \"_msgid\": \"bdd912b420cee96b\"\n//}\n\nlet fields = {\n  \"wNow\": (msg.payload.p),\n  \"reactPower\": (msg.payload.q),\n  \"apprntPwr\": (msg.payload.s),\n  \"rmsVoltage\": (msg.payload.v),\n  \"rmsCurrent\": (msg.payload.i),\n  \"pwrFactor\": (msg.payload.pf),\n  \"frequency\": (msg.payload.f),\n  // time: new Date().getTime() -> set time precision to ms in influx out node!\n  \"time\": (msg.time)\n};\n\nlet tags = {\n  \"topic\": (msg.topic),\n  \"phase\": (msg.phase)\n};\n\nmsg.payload = [fields,tags]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 620,
        "wires": [
            [
                "d3776eae5ffb7e06",
                "8e1dfedd9994b9aa"
            ]
        ]
    },
    {
        "id": "e498a42fbb59c40c",
        "type": "split",
        "z": "52721e447cd68db3",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "phase",
        "x": 410,
        "y": 620,
        "wires": [
            [
                "29e442028acaef29"
            ]
        ]
    },
    {
        "id": "29dd2e5fd14716ea",
        "type": "split",
        "z": "52721e447cd68db3",
        "name": "",
        "splt": "",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 230,
        "y": 620,
        "wires": [
            [
                "e498a42fbb59c40c"
            ]
        ]
    },
    {
        "id": "d3776eae5ffb7e06",
        "type": "debug",
        "z": "52721e447cd68db3",
        "name": "DBG Influx",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 580,
        "wires": []
    },
    {
        "id": "e824c1370ceb88d6",
        "type": "comment",
        "z": "52721e447cd68db3",
        "name": "Live View -> /stream/meter",
        "info": "",
        "x": 250,
        "y": 240,
        "wires": []
    },
    {
        "id": "71cc99b80ef710d5",
        "type": "http request",
        "z": "52721e447cd68db3",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://192.168.178.4/api/v1/production/inverters",
        "tls": "a0af54c0.3a7438",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 690,
        "y": 840,
        "wires": [
            [
                "1fc70e90b9d9e83c",
                "a3f3ea4e26ad66fa"
            ]
        ]
    },
    {
        "id": "843f1c3427609a9d",
        "type": "debug",
        "z": "52721e447cd68db3",
        "name": "DBG Inverter Details",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 1000,
        "wires": []
    },
    {
        "id": "f2698c3734489db8",
        "type": "comment",
        "z": "52721e447cd68db3",
        "name": "Inverter Details -> /api/v1/production/inverters",
        "info": "",
        "x": 310,
        "y": 780,
        "wires": []
    },
    {
        "id": "71e55ff3ce185234",
        "type": "change",
        "z": "52721e447cd68db3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "sessionHeader",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 840,
        "wires": [
            [
                "71cc99b80ef710d5"
            ]
        ]
    },
    {
        "id": "661a0a53195e8110",
        "type": "inject",
        "z": "52721e447cd68db3",
        "name": "Start Continuous",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 840,
        "wires": [
            [
                "71e55ff3ce185234"
            ]
        ]
    },
    {
        "id": "1fc70e90b9d9e83c",
        "type": "json",
        "z": "52721e447cd68db3",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 210,
        "y": 940,
        "wires": [
            [
                "fedb39902b81a940"
            ]
        ]
    },
    {
        "id": "fedb39902b81a940",
        "type": "split",
        "z": "52721e447cd68db3",
        "name": "",
        "splt": "",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 370,
        "y": 940,
        "wires": [
            [
                "642a092484918379"
            ]
        ]
    },
    {
        "id": "642a092484918379",
        "type": "function",
        "z": "52721e447cd68db3",
        "name": "reconstruct data",
        "func": "// Influx:\n// If msg.payload is an array containing two objects, \n// the first object will be written as the set of \n// named fields, the second is the set of named tags.\n\n//{\n//  \"serialNumber\": \"122213000087\",\n//  \"lastReportDate\": 1676046738,\n//  \"devType\": 1,\n//  \"lastReportWatts\": 0,\n//  \"maxReportWatts\": 0\n//}\n\nlet fields = {\n  \"curWatts\": (msg.payload.lastReportWatts),\n  \"maxWatts\": (msg.payload.maxReportWatts)\n  //time: new Date().getTime() -> set time precision to ms in influx out node!\n};\n\nlet tags = {\n  \"inverter\": (msg.payload.serialNumber)\n};\n\nmsg.payload = [fields,tags]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 940,
        "wires": [
            [
                "e722110d7a313b58",
                "843f1c3427609a9d"
            ]
        ]
    },
    {
        "id": "8e1dfedd9994b9aa",
        "type": "influxdb out",
        "z": "52721e447cd68db3",
        "influxdb": "61e1038ad2a9bd11",
        "name": "Influxdb envoy",
        "measurement": "envoy_meter",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "SloBloLabs",
        "bucket": "smarthome",
        "x": 880,
        "y": 620,
        "wires": []
    },
    {
        "id": "e722110d7a313b58",
        "type": "influxdb out",
        "z": "52721e447cd68db3",
        "influxdb": "61e1038ad2a9bd11",
        "name": "Influxdb envoy",
        "measurement": "envoy_meter",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "s",
        "retentionPolicyV18Flux": "",
        "org": "SloBloLabs",
        "bucket": "smarthome",
        "x": 860,
        "y": 940,
        "wires": []
    },
    {
        "id": "8f777435f79f3812",
        "type": "debug",
        "z": "52721e447cd68db3",
        "name": "New Measurement",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 480,
        "wires": []
    },
    {
        "id": "3602cfb264d30dd5",
        "type": "link out",
        "z": "52721e447cd68db3",
        "name": "Send Enphase Stream Raw Data",
        "mode": "link",
        "links": [
            "aad26db58801ddcc",
            "2bc5ac89842c040c",
            "e0d8fee82c0e9d6e"
        ],
        "x": 1745,
        "y": 680,
        "wires": []
    },
    {
        "id": "3a30b6f605c84af2",
        "type": "function",
        "z": "52721e447cd68db3",
        "name": "Calculate Timestamp",
        "func": "let startTime = flow.get(\"startTime\");\nlet messageCount = flow.get(\"messageCount\");\n\nlet startDate = new Date(startTime);\nlet systemTimestamp = new Date();\n\nif (systemTimestamp.getDate() != startDate.getDate()) {\n    // reset time\n    node.log(\"Reset time\");\n\n    startTime = systemTimestamp.getTime();\n    flow.set(\"startTime\", startTime); // in milliseconds\n    flow.set(\"messageCount\", 0);\n} else {\n    flow.set(\"messageCount\", messageCount + 1);\n}\n\nmsg.time = startTime + messageCount * 1000;\nlet now = new Date(msg.time);\nnode.status({ fill: \"green\", shape: \"ring\", text: \"Time: \" + now.toLocaleString(\"de-DE\") });\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 520,
        "wires": [
            [
                "29dd2e5fd14716ea",
                "8f777435f79f3812",
                "7c968632a94bf22e"
            ]
        ]
    },
    {
        "id": "1e31be47c78cb27d",
        "type": "comment",
        "z": "52721e447cd68db3",
        "name": "On Demand -> /production.json",
        "info": "",
        "x": 270,
        "y": 1100,
        "wires": []
    },
    {
        "id": "8b775545a2cf672a",
        "type": "inject",
        "z": "52721e447cd68db3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "30",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 1160,
        "wires": [
            [
                "27b620d3701b5a09"
            ]
        ]
    },
    {
        "id": "edd17ceb5de9154c",
        "type": "debug",
        "z": "52721e447cd68db3",
        "name": "Production Raw Data",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1000,
        "y": 1300,
        "wires": []
    },
    {
        "id": "27b620d3701b5a09",
        "type": "change",
        "z": "52721e447cd68db3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "sessionHeader",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 1160,
        "wires": [
            [
                "7f20073fcaa69d74"
            ]
        ]
    },
    {
        "id": "7f20073fcaa69d74",
        "type": "http request",
        "z": "52721e447cd68db3",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://192.168.178.4/production.json",
        "tls": "a0af54c0.3a7438",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 650,
        "y": 1160,
        "wires": [
            [
                "2e933e645cc120a9"
            ]
        ]
    },
    {
        "id": "165ddd6493a36e96",
        "type": "json",
        "z": "52721e447cd68db3",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 210,
        "y": 1260,
        "wires": [
            [
                "c07d61bde31fda51",
                "8671f0409dc426da"
            ]
        ]
    },
    {
        "id": "4c81f93a76e69209",
        "type": "split",
        "z": "52721e447cd68db3",
        "name": "",
        "splt": "",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 390,
        "y": 1340,
        "wires": [
            [
                "0304b3562e816ccf"
            ]
        ]
    },
    {
        "id": "c07d61bde31fda51",
        "type": "change",
        "z": "52721e447cd68db3",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "payload.storage",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.production[0]",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 220,
        "y": 1340,
        "wires": [
            [
                "4c81f93a76e69209"
            ]
        ]
    },
    {
        "id": "0304b3562e816ccf",
        "type": "split",
        "z": "52721e447cd68db3",
        "name": "",
        "splt": "",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 530,
        "y": 1340,
        "wires": [
            [
                "a24cce877996054b"
            ]
        ]
    },
    {
        "id": "a24cce877996054b",
        "type": "function",
        "z": "52721e447cd68db3",
        "name": "reconstruct data",
        "func": "// Influx:\n// If msg.payload is an array containing two objects, \n// the first object will be written as the set of \n// named fields, the second is the set of named tags.\n\n//{\n//    \"payload\": {\n//        \"type\": \"eim\",\n//        \"activeCount\": 1,\n//        \"measurementType\": \"production\",\n//        \"readingTime\": 1688817795,\n//        \"wNow\": 7857.441,\n//        \"whLifetime\": 5732718.067,\n//        \"varhLeadLifetime\": 0.308,\n//        \"varhLagLifetime\": 1546350.897,\n//        \"vahLifetime\": 6724556.291,\n//        \"rmsCurrent\": 33.415,\n//        \"rmsVoltage\": 714.211,\n//        \"reactPwr\": 393.435,\n//        \"apprntPwr\": 7859.817,\n//        \"pwrFactor\": 1,\n//        \"whToday\": 32658.067,\n//        \"whLastSevenDays\": 5700270.067,\n//        \"vahToday\": 35912.291,\n//        \"varhLeadToday\": 0.308,\n//        \"varhLagToday\": 5793.897\n//    },\n//    \"topic\": \"production\",\n//    \"headers\": {\n//        \"server\": \"openresty/1.17.8.1\",\n//        \"date\": \"Sat, 08 Jul 2023 12:03:15 GMT\",\n//        \"content-type\": \"application/json\",\n//        \"transfer-encoding\": \"chunked\",\n//        \"connection\": \"close\",\n//        \"pragma\": \"no-cache\",\n//        \"expires\": \"1\",\n//        \"cache-control\": \"no-cache\",\n//        \"strict-transport-security\": \"max-age=63072000; includeSubdomains\",\n//        \"x-frame-options\": \"DENY\",\n//        \"x-content-type-options\": \"nosniff\",\n//        \"x-node-red-request-node\": \"cb38b0c8\"\n//    },\n//    \"statusCode\": 200,\n//    \"responseUrl\": \"https://envoy/production.json\",\n//    \"redirectList\": [],\n//    \"retry\": 0,\n//    \"parts\": {\n//        \"parts\": {\n//            \"id\": \"b4134c7abfc60b71\",\n//            \"type\": \"object\",\n//            \"key\": \"production\",\n//            \"index\": 0,\n//            \"count\": 2\n//        },\n//        \"id\": \"24b0de3aefcef9ec\",\n//        \"type\": \"array\",\n//        \"count\": 1,\n//        \"len\": 1,\n//        \"index\": 0\n//    },\n//    \"_msgid\": \"fe20c379a065576c\"\n//}\n\nlet fields = {\n  \"wNow\": (msg.payload.wNow),\n  \"reactPower\": (msg.payload.reactPwr),\n  \"apprntPwr\": (msg.payload.apprntPwr),\n  \"rmsVoltage\": (msg.payload.rmsVoltage),\n  \"rmsCurrent\": (msg.payload.rmsCurrent),\n  \"pwrFactor\": (msg.payload.pwrFactor),\n  //\"frequency\": (msg.payload.f),\n  // time: new Date().getTime() -> set time precision to ms in influx out node!\n  \"time\": (msg.payload.readingTime)\n};\n\nlet tags = {\n  \"topic\": (msg.payload.measurementType)\n};\n\nmsg.payload = [fields,tags]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 1340,
        "wires": [
            [
                "01fb2dc261fd61c6",
                "edd17ceb5de9154c"
            ]
        ]
    },
    {
        "id": "01fb2dc261fd61c6",
        "type": "influxdb out",
        "z": "52721e447cd68db3",
        "influxdb": "61e1038ad2a9bd11",
        "name": "Influxdb envoy",
        "measurement": "envoy_meter",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "s",
        "retentionPolicyV18Flux": "",
        "org": "SloBloLabs",
        "bucket": "smarthome",
        "x": 980,
        "y": 1340,
        "wires": []
    },
    {
        "id": "6ea6f50351466fb9",
        "type": "function",
        "z": "52721e447cd68db3",
        "d": true,
        "name": "Parse Enphase Message",
        "func": "// fetch state from flow context\nlet pvPowerValues = flow.get(\"pvPowerValues\")\nlet consumptionValues = flow.get(\"consumptionValues\")\n\n// fetch values from payload\nconst newPvPowerValue = msg.payload.production[\"ph-a\"].p\n                      + msg.payload.production[\"ph-b\"].p\n                      + msg.payload.production[\"ph-c\"].p;\n\nconst newConsumptionValue = msg.payload[\"total-consumption\"][\"ph-a\"].p\n                          + msg.payload[\"total-consumption\"][\"ph-b\"].p\n                          + msg.payload[\"total-consumption\"][\"ph-c\"].p;\n\n// prepend new value to array\npvPowerValues.unshift(newPvPowerValue)\nconsumptionValues.unshift(newConsumptionValue)\n\n// array housekeepting\nlet maxArraySize = 60 // in s\n\nif (pvPowerValues.length > maxArraySize) {\n    pvPowerValues.pop()\n}\n\nif(consumptionValues.length > maxArraySize) {\n    consumptionValues.pop()\n}\n\n// calculate average values\nconst average = arr => arr.reduce((p, c) => p + c, 0) / arr.length;\n\nmsg.avgPvPower = average(pvPowerValues);\nmsg.avgConsumption = average(consumptionValues);\n\nnode.status({ fill: \"green\", shape: \"ring\", text: \"Avg PvPower: \" + msg.avgPvPower + \", Avg Consumption: \" + msg.avgConsumption });\n\n// store new values to flow context\nflow.set(\"pvPowerValues\", pvPowerValues)\nflow.set(\"consumptionValues\", consumptionValues)\n\nflow.set(\"avgPvPower\", msg.avgPvPower)\nflow.set(\"avgConsumption\", msg.avgConsumption)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\n\nflow.set(\"pvPowerValues\", [])\nflow.set(\"consumptionValues\", [])\n\nflow.set(\"avgPvPower\", 0)\nflow.set(\"avgConsumption\", 0)",
        "finalize": "",
        "libs": [],
        "x": 1470,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "3736352cc1296d90",
        "type": "inject",
        "z": "52721e447cd68db3",
        "name": "Simulate Enphase Message",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{     \"production\": {         \"ph-a\": {             \"p\": -2.774,             \"q\": 131.02,             \"s\": 135.442,             \"v\": 238.637,             \"i\": 0.568,             \"pf\": 0,             \"f\": 50.12         },         \"ph-b\": {             \"p\": -2.808,             \"q\": 143.869,             \"s\": 143.869,             \"v\": 238.869,             \"i\": 0.602,             \"pf\": 0,             \"f\": 50.12         },         \"ph-c\": {             \"p\": -3.827,             \"q\": 146.98,             \"s\": 151.431,             \"v\": 238.228,             \"i\": 0.635,             \"pf\": -0.04,             \"f\": 50.12         }     },     \"net-consumption\": {         \"ph-a\": {             \"p\": 434.726,             \"q\": -130.421,             \"s\": 534,             \"v\": 238.928,             \"i\": 2.236,             \"pf\": 0.82,             \"f\": 50.12         },         \"ph-b\": {             \"p\": 59.933,             \"q\": -161.005,             \"s\": 168.019,             \"v\": 238.86,             \"i\": 0.704,             \"pf\": 0.32,             \"f\": 50.12         },         \"ph-c\": {             \"p\": 24.997,             \"q\": -179.517,             \"s\": 197.466,             \"v\": 238.398,             \"i\": 0.828,             \"pf\": 0.11,             \"f\": 50.12         }     },     \"total-consumption\": {         \"ph-a\": {             \"p\": 431.952,             \"q\": -261.441,             \"s\": 669.504,             \"v\": 238.782,             \"i\": 2.804,             \"pf\": 0.65,             \"f\": 50.12         },         \"ph-b\": {             \"p\": 57.125,             \"q\": -304.874,             \"s\": 311.809,             \"v\": 238.864,             \"i\": 1.305,             \"pf\": 0.18,             \"f\": 50.12         },         \"ph-c\": {             \"p\": 21.17,             \"q\": -326.497,             \"s\": 348.747,             \"v\": 238.313,             \"i\": 1.463,             \"pf\": 0.06,             \"f\": 50.12         }     } }",
        "payloadType": "json",
        "x": 1140,
        "y": 420,
        "wires": [
            [
                "6ea6f50351466fb9",
                "7c968632a94bf22e"
            ]
        ]
    },
    {
        "id": "b9a616e09a519abb",
        "type": "smooth",
        "z": "52721e447cd68db3",
        "name": "Average per Topic",
        "property": "payload",
        "action": "mean",
        "count": "60",
        "round": "1",
        "mult": "multi",
        "reduce": true,
        "x": 1820,
        "y": 480,
        "wires": [
            [
                "469e636acdd78326"
            ]
        ]
    },
    {
        "id": "9b6ce1379e2490f7",
        "type": "join",
        "z": "52721e447cd68db3",
        "name": "Join",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 1610,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "7c968632a94bf22e",
        "type": "split",
        "z": "52721e447cd68db3",
        "name": "Split by Key",
        "splt": "",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 1400,
        "y": 480,
        "wires": [
            [
                "91ed212ad4b8811e"
            ]
        ]
    },
    {
        "id": "91ed212ad4b8811e",
        "type": "change",
        "z": "52721e447cd68db3",
        "name": "Aggregate Phases",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$sum(msg.payload.*.p)",
                "tot": "jsonata"
            },
            {
                "t": "change",
                "p": "parts.key",
                "pt": "msg",
                "from": "production",
                "fromt": "str",
                "to": "production",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "parts.key",
                "pt": "msg",
                "from": "net-consumption",
                "fromt": "str",
                "to": "netConsumption",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "parts.key",
                "pt": "msg",
                "from": "total-consumption",
                "fromt": "str",
                "to": "consumption",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1600,
        "y": 480,
        "wires": [
            [
                "b9a616e09a519abb"
            ]
        ]
    },
    {
        "id": "469e636acdd78326",
        "type": "change",
        "z": "52721e447cd68db3",
        "name": "Group events",
        "rules": [
            {
                "t": "set",
                "p": "parts.id",
                "pt": "msg",
                "to": "enphase",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1410,
        "y": 560,
        "wires": [
            [
                "9b6ce1379e2490f7"
            ]
        ]
    },
    {
        "id": "8671f0409dc426da",
        "type": "change",
        "z": "52721e447cd68db3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "time",
                "pt": "msg",
                "to": "payload.production[\"production\" in measurementType].readingTime * 1000",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t\"production\": payload.production[\"production\" in measurementType].wNow,\t\"consumption\": payload.consumption[\"total-consumption\" in measurementType].wNow,\t\"netConsumption\": payload.consumption[\"net-consumption\" in measurementType].wNow\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 1260,
        "wires": [
            [
                "3602cfb264d30dd5"
            ]
        ]
    },
    {
        "id": "c40d2a7699fc664b",
        "type": "comment",
        "z": "52721e447cd68db3",
        "name": "Sample Output",
        "info": "\n{\n    \"payload\": {\n        \"production\": 4034.614,\n        \"consumption\": 126.497,\n        \"netConsumption\": -3908.117\n    },\n    \"topic\": \"\",\n    \"_msgid\": \"0476cf42f1509e56\",\n    \"headers\": {\n        \"server\": \"openresty/1.17.8.1\",\n        \"date\": \"Sun, 09 Jul 2023 07:49:09 GMT\",\n        \"content-type\": \"application/json\",\n        \"transfer-encoding\": \"chunked\",\n        \"connection\": \"close\",\n        \"pragma\": \"no-cache\",\n        \"expires\": \"1\",\n        \"cache-control\": \"no-cache\",\n        \"strict-transport-security\": \"max-age=63072000; includeSubdomains\",\n        \"x-frame-options\": \"DENY\",\n        \"x-content-type-options\": \"nosniff\",\n        \"x-node-red-request-node\": \"fe0ba706\"\n    },\n    \"statusCode\": 200,\n    \"responseUrl\": \"https://envoy/production.json\",\n    \"redirectList\": [],\n    \"retry\": 0,\n    \"time\": 1688888949000\n}\n",
        "x": 1760,
        "y": 740,
        "wires": []
    },
    {
        "id": "e0e5b07bad345897",
        "type": "debug",
        "z": "52721e447cd68db3",
        "name": "Log Http Errors",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1420,
        "y": 1200,
        "wires": []
    },
    {
        "id": "a3f3ea4e26ad66fa",
        "type": "debug",
        "z": "52721e447cd68db3",
        "name": "debug 4",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 820,
        "wires": []
    },
    {
        "id": "4229f793f71863ab",
        "type": "catch",
        "z": "52721e447cd68db3",
        "name": "Catch Http Errors",
        "scope": [
            "5944b091.17285",
            "71cc99b80ef710d5",
            "7f20073fcaa69d74"
        ],
        "uncaught": false,
        "x": 1160,
        "y": 1220,
        "wires": [
            [
                "e0e5b07bad345897"
            ]
        ]
    },
    {
        "id": "2e933e645cc120a9",
        "type": "switch",
        "z": "52721e447cd68db3",
        "name": "Payload valid?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 860,
        "y": 1140,
        "wires": [
            [
                "165ddd6493a36e96"
            ],
            [
                "738a4da9eb30810d"
            ]
        ]
    },
    {
        "id": "738a4da9eb30810d",
        "type": "change",
        "z": "52721e447cd68db3",
        "name": "Set message content",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Enphase payload is empty",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Error connecting to enphase",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1180,
        "y": 1180,
        "wires": [
            [
                "e0e5b07bad345897",
                "ca30f6494ad522e0"
            ]
        ]
    },
    {
        "id": "d6a14e58170e959b",
        "type": "e-mail",
        "z": "52721e447cd68db3",
        "server": "mail.gmx.net",
        "port": "465",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "secure": true,
        "tls": true,
        "name": "olly.walczak@gmx.de",
        "dname": "Send Mail Notification",
        "x": 1640,
        "y": 1040,
        "wires": []
    },
    {
        "id": "adcfd225129bcbe1",
        "type": "inject",
        "z": "52721e447cd68db3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "test",
        "payload": "Say hi from node-red",
        "payloadType": "str",
        "x": 1310,
        "y": 1040,
        "wires": [
            [
                "d6a14e58170e959b"
            ]
        ]
    },
    {
        "id": "ca30f6494ad522e0",
        "type": "delay",
        "z": "52721e447cd68db3",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "day",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1410,
        "y": 1120,
        "wires": [
            [
                "d6a14e58170e959b"
            ]
        ]
    },
    {
        "id": "a0af54c0.3a7438",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": false,
        "alpnprotocol": ""
    },
    {
        "id": "61e1038ad2a9bd11",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "database",
        "name": "influx envoy",
        "usetls": false,
        "tls": "a0af54c0.3a7438",
        "influxdbVersion": "2.0",
        "url": "http://localhost:8086",
        "rejectUnauthorized": false,
        "credentials": {}
    }
]