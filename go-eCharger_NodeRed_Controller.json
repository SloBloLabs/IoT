[
    {
        "id": "7f238379090da3b0",
        "type": "tab",
        "label": "go-eCharger",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "12fbad89a6c2acc9",
        "type": "inject",
        "z": "7f238379090da3b0",
        "name": "Charge Control",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 120,
        "y": 700,
        "wires": [
            [
                "2b59ae34bd5fe3d7"
            ]
        ]
    },
    {
        "id": "abeafa1098dbbe39",
        "type": "http request",
        "z": "7f238379090da3b0",
        "name": "/api/status",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "query",
        "url": "http://192.168.178.2:5080/api/status",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 510,
        "y": 700,
        "wires": [
            [
                "99e747b49d27367f"
            ]
        ]
    },
    {
        "id": "d23b9749877b28ec",
        "type": "comment",
        "z": "7f238379090da3b0",
        "name": "https://github.com/goecharger/go-eCharger-API-v2/blob/main/apikeys-de.md",
        "info": "",
        "x": 350,
        "y": 620,
        "wires": []
    },
    {
        "id": "aad26db58801ddcc",
        "type": "link in",
        "z": "7f238379090da3b0",
        "name": "Receive Enphase Stream Raw Data",
        "links": [
            "3602cfb264d30dd5"
        ],
        "x": 245,
        "y": 280,
        "wires": [
            [
                "304ba7103ba755d4"
            ]
        ]
    },
    {
        "id": "ae8274624b4eaea7",
        "type": "comment",
        "z": "7f238379090da3b0",
        "name": "Enphase Monitor",
        "info": "",
        "x": 320,
        "y": 200,
        "wires": []
    },
    {
        "id": "77c05377fc1ee1f2",
        "type": "http request",
        "z": "7f238379090da3b0",
        "name": "/api/set",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "query",
        "url": "http://192.168.178.2:5080/api/set",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1920,
        "y": 2080,
        "wires": [
            []
        ]
    },
    {
        "id": "2ab4b97a56ab922d",
        "type": "debug",
        "z": "7f238379090da3b0",
        "name": "Show Commands",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1960,
        "y": 2040,
        "wires": []
    },
    {
        "id": "0ddf3866962da9d1",
        "type": "inject",
        "z": "7f238379090da3b0",
        "name": "Start",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1170,
        "y": 1900,
        "wires": [
            [
                "7459187132bf8080",
                "0bbab0da93ed641b"
            ]
        ]
    },
    {
        "id": "89c5dde840afa8ac",
        "type": "inject",
        "z": "7f238379090da3b0",
        "name": "Stop",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 1170,
        "y": 1960,
        "wires": [
            [
                "7459187132bf8080",
                "c3553e31686efde5"
            ]
        ]
    },
    {
        "id": "f4645d1940ee65a4",
        "type": "inject",
        "z": "7f238379090da3b0",
        "name": "Disable Charging",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "off",
        "payloadType": "str",
        "x": 720,
        "y": 1660,
        "wires": [
            [
                "172291b267e64546",
                "2449ba03868ff762"
            ]
        ]
    },
    {
        "id": "32142ce2a0e13520",
        "type": "inject",
        "z": "7f238379090da3b0",
        "name": "Set Sun Mode",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "sun",
        "payloadType": "str",
        "x": 730,
        "y": 1780,
        "wires": [
            [
                "172291b267e64546",
                "2449ba03868ff762"
            ]
        ]
    },
    {
        "id": "d0c713ab578019d1",
        "type": "inject",
        "z": "7f238379090da3b0",
        "name": "Set Eco Mode",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "eco",
        "payloadType": "str",
        "x": 720,
        "y": 1740,
        "wires": [
            [
                "172291b267e64546",
                "2449ba03868ff762"
            ]
        ]
    },
    {
        "id": "172291b267e64546",
        "type": "change",
        "z": "7f238379090da3b0",
        "name": "Set flow.chargeMode",
        "rules": [
            {
                "t": "set",
                "p": "chargeMode",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 1720,
        "wires": [
            [
                "237f0e77d00e8430"
            ]
        ]
    },
    {
        "id": "a2e4e6f9ef184ac3",
        "type": "comment",
        "z": "7f238379090da3b0",
        "name": "Set Charge Mode",
        "info": "",
        "x": 720,
        "y": 1620,
        "wires": []
    },
    {
        "id": "237f0e77d00e8430",
        "type": "debug",
        "z": "7f238379090da3b0",
        "name": "Charge Mode",
        "active": true,
        "tosidebar": false,
        "console": false,
        "tostatus": true,
        "complete": "chargeMode",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "msg",
        "x": 1220,
        "y": 1720,
        "wires": []
    },
    {
        "id": "f7f3498beec89f60",
        "type": "inject",
        "z": "7f238379090da3b0",
        "name": "Set Fast Mode",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "fast",
        "payloadType": "str",
        "x": 720,
        "y": 1700,
        "wires": [
            [
                "172291b267e64546",
                "2449ba03868ff762"
            ]
        ]
    },
    {
        "id": "56ddf2cb89285cfb",
        "type": "change",
        "z": "7f238379090da3b0",
        "name": "Car Allowed to Charge",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.alw",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "allowed2Charge",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "allowed2Charge",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 1040,
        "wires": [
            [
                "17d65e7fd4bde17b"
            ]
        ]
    },
    {
        "id": "17d65e7fd4bde17b",
        "type": "debug",
        "z": "7f238379090da3b0",
        "name": "Car Allowed to Charge",
        "active": true,
        "tosidebar": false,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload.alw",
        "statusType": "auto",
        "x": 1220,
        "y": 1040,
        "wires": []
    },
    {
        "id": "241885f9b9d571b5",
        "type": "change",
        "z": "7f238379090da3b0",
        "name": "Charge Current",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.amp",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "chargeCurrent",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "chargeCurrent",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 1100,
        "wires": [
            [
                "80d437c03212d5b9"
            ]
        ]
    },
    {
        "id": "80d437c03212d5b9",
        "type": "debug",
        "z": "7f238379090da3b0",
        "name": "Charge Current",
        "active": true,
        "tosidebar": false,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload.alw",
        "statusType": "auto",
        "x": 1200,
        "y": 1100,
        "wires": []
    },
    {
        "id": "ab06b49095e88274",
        "type": "change",
        "z": "7f238379090da3b0",
        "name": "Charge Power",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.nrg[11]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "chargePower",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "chargePower",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 980,
        "wires": [
            [
                "b86b3e38614fa44b"
            ]
        ]
    },
    {
        "id": "b86b3e38614fa44b",
        "type": "debug",
        "z": "7f238379090da3b0",
        "name": "Charge Power",
        "active": true,
        "tosidebar": false,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload.alw",
        "statusType": "auto",
        "x": 1200,
        "y": 980,
        "wires": []
    },
    {
        "id": "4d851e277cad6960",
        "type": "switch",
        "z": "7f238379090da3b0",
        "name": "Check Car State",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "4",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 960,
        "y": 700,
        "wires": [
            [
                "3b15b9991510cf02"
            ],
            [
                "5c1796400b79a753"
            ],
            [
                "13844a57b33ad87e"
            ],
            [
                "fef13efbef4be4a7"
            ],
            [
                "45cc319b2dd0c96a"
            ]
        ]
    },
    {
        "id": "45cc319b2dd0c96a",
        "type": "debug",
        "z": "7f238379090da3b0",
        "name": "Error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "counter",
        "x": 950,
        "y": 780,
        "wires": []
    },
    {
        "id": "3b15b9991510cf02",
        "type": "debug",
        "z": "7f238379090da3b0",
        "name": "1: Idle",
        "active": true,
        "tosidebar": false,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "counter",
        "x": 1170,
        "y": 620,
        "wires": []
    },
    {
        "id": "5c1796400b79a753",
        "type": "debug",
        "z": "7f238379090da3b0",
        "name": "2: Charging",
        "active": true,
        "tosidebar": false,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "counter",
        "x": 1190,
        "y": 680,
        "wires": []
    },
    {
        "id": "13844a57b33ad87e",
        "type": "debug",
        "z": "7f238379090da3b0",
        "name": "3: Wait for Car",
        "active": true,
        "tosidebar": false,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "counter",
        "x": 1200,
        "y": 740,
        "wires": []
    },
    {
        "id": "fef13efbef4be4a7",
        "type": "debug",
        "z": "7f238379090da3b0",
        "name": "4: Complete",
        "active": true,
        "tosidebar": false,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "counter",
        "x": 1190,
        "y": 800,
        "wires": []
    },
    {
        "id": "512d67a351bbe98a",
        "type": "function",
        "z": "7f238379090da3b0",
        "name": "Time of last update",
        "func": "flow.set(\"lastEnvoyUpdate\", new Date(msg.time).toString());\n\nlet now = new Date(msg.time);\nnode.status({ fill: \"green\", shape: \"ring\", text: \"Last update: \" + now.toLocaleString(\"de-DE\") });\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "0ba0eeaa20b63f8a",
        "type": "change",
        "z": "7f238379090da3b0",
        "name": "Cable Current Limit",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.cbl",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "cableCurrentLimit",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "cableCurrentLimit",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 1160,
        "wires": [
            [
                "e1f790f0af03f01c"
            ]
        ]
    },
    {
        "id": "e1f790f0af03f01c",
        "type": "debug",
        "z": "7f238379090da3b0",
        "name": "Cable Current Limit",
        "active": true,
        "tosidebar": false,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload.alw",
        "statusType": "auto",
        "x": 1210,
        "y": 1160,
        "wires": []
    },
    {
        "id": "2116b6e552040ca9",
        "type": "change",
        "z": "7f238379090da3b0",
        "name": "Preserve go-e Status",
        "rules": [
            {
                "t": "set",
                "p": "goe",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "enphase",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 1240,
        "wires": [
            [
                "7800c66d240f1e37",
                "3cd9e6847116fc5f",
                "ab06b49095e88274",
                "56ddf2cb89285cfb",
                "241885f9b9d571b5",
                "0ba0eeaa20b63f8a",
                "c0a753ee1e98bf27",
                "7cfc3161b94129d6",
                "752ac87f802e6024",
                "5fb45ffd3ec01e77",
                "8ad8def1ad2a3c15",
                "0f4d35d90fa4e731",
                "2091764c50448087"
            ]
        ]
    },
    {
        "id": "99e747b49d27367f",
        "type": "change",
        "z": "7f238379090da3b0",
        "name": "Count Active Phases",
        "rules": [
            {
                "t": "set",
                "p": "payload.pha",
                "pt": "msg",
                "to": "(\t    $countActive := function($acc, $obj){$obj ? $acc + 1 : $acc};\t    $reduce(payload.pha[[0,1,2]], $countActive, 0)\t)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 1000,
        "wires": [
            [
                "1b6aed5b91a69387",
                "d598e31b7968642a"
            ]
        ]
    },
    {
        "id": "d598e31b7968642a",
        "type": "change",
        "z": "7f238379090da3b0",
        "name": "Active Phases",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.pha",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "activePhases",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "activePhases",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 860,
        "wires": [
            [
                "b0947bf194770bf2"
            ]
        ]
    },
    {
        "id": "b0947bf194770bf2",
        "type": "debug",
        "z": "7f238379090da3b0",
        "name": "Active Phases",
        "active": true,
        "tosidebar": false,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload.alw",
        "statusType": "auto",
        "x": 1200,
        "y": 860,
        "wires": []
    },
    {
        "id": "e8e1c0ab90502d46",
        "type": "debug",
        "z": "7f238379090da3b0",
        "name": "Monitor Raw Data",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 640,
        "wires": []
    },
    {
        "id": "1b6aed5b91a69387",
        "type": "change",
        "z": "7f238379090da3b0",
        "name": "Count Charging Phases",
        "rules": [
            {
                "t": "set",
                "p": "payload.nrg_pha",
                "pt": "msg",
                "to": "(\t    $countCharging := function($acc, $obj){$obj > 1 ? $acc + 1 : $acc};\t    $reduce(payload.nrg[[4,5,6]], $countCharging, 0)\t)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 1060,
        "wires": [
            [
                "2116b6e552040ca9",
                "e8e1c0ab90502d46",
                "ec22ca925c6e938d",
                "fe19d31bf0424b95"
            ]
        ]
    },
    {
        "id": "fe19d31bf0424b95",
        "type": "change",
        "z": "7f238379090da3b0",
        "name": "Charging Phases",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.nrg_pha",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "chargingPhases",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "chargingPhases",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 920,
        "wires": [
            [
                "589bdfcd0fa8f297"
            ]
        ]
    },
    {
        "id": "589bdfcd0fa8f297",
        "type": "debug",
        "z": "7f238379090da3b0",
        "name": "Charging Phases",
        "active": true,
        "tosidebar": false,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload.alw",
        "statusType": "auto",
        "x": 1210,
        "y": 920,
        "wires": []
    },
    {
        "id": "c0a753ee1e98bf27",
        "type": "change",
        "z": "7f238379090da3b0",
        "name": "Min Charge Current",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.mca",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "minChargeCurrent",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "minChargeCurrent",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 1220,
        "wires": [
            [
                "1be0713a35721f50"
            ]
        ]
    },
    {
        "id": "1be0713a35721f50",
        "type": "debug",
        "z": "7f238379090da3b0",
        "name": "Min Charge Current",
        "active": true,
        "tosidebar": false,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload.alw",
        "statusType": "auto",
        "x": 1210,
        "y": 1220,
        "wires": []
    },
    {
        "id": "7cfc3161b94129d6",
        "type": "change",
        "z": "7f238379090da3b0",
        "name": "Max Charge Current",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.ama",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "maxChargeCurrent",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "miaxChargeCurrent",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 1280,
        "wires": [
            [
                "7723ab2f109bc88b"
            ]
        ]
    },
    {
        "id": "7723ab2f109bc88b",
        "type": "debug",
        "z": "7f238379090da3b0",
        "name": "Max Charge Current",
        "active": true,
        "tosidebar": false,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload.alw",
        "statusType": "auto",
        "x": 1220,
        "y": 1280,
        "wires": []
    },
    {
        "id": "752ac87f802e6024",
        "type": "change",
        "z": "7f238379090da3b0",
        "name": "Charge Amount Current Session",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.wh",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "chargeAmount",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "chargeAmount",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 1340,
        "wires": [
            [
                "0e9d7a684dfa9036"
            ]
        ]
    },
    {
        "id": "0e9d7a684dfa9036",
        "type": "debug",
        "z": "7f238379090da3b0",
        "name": "Charge Amount Current Session",
        "active": true,
        "tosidebar": false,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload.alw",
        "statusType": "auto",
        "x": 1250,
        "y": 1340,
        "wires": []
    },
    {
        "id": "5fb45ffd3ec01e77",
        "type": "change",
        "z": "7f238379090da3b0",
        "name": "Total Charge Amount",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.eto",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "totalChargeAmount",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "totalChargeAmount",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 1400,
        "wires": [
            [
                "7353d46058b45987"
            ]
        ]
    },
    {
        "id": "7353d46058b45987",
        "type": "debug",
        "z": "7f238379090da3b0",
        "name": "Total Charge Amount",
        "active": true,
        "tosidebar": false,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload.alw",
        "statusType": "auto",
        "x": 1220,
        "y": 1400,
        "wires": []
    },
    {
        "id": "8ad8def1ad2a3c15",
        "type": "change",
        "z": "7f238379090da3b0",
        "name": "Force Single Phase",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.fsp",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "forceSinglePhase",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "forceSinglePhase",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 1460,
        "wires": [
            [
                "9d5425e88089ad8b"
            ]
        ]
    },
    {
        "id": "9d5425e88089ad8b",
        "type": "debug",
        "z": "7f238379090da3b0",
        "name": "Force Single Phase",
        "active": true,
        "tosidebar": false,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload.alw",
        "statusType": "auto",
        "x": 1210,
        "y": 1460,
        "wires": []
    },
    {
        "id": "0f4d35d90fa4e731",
        "type": "change",
        "z": "7f238379090da3b0",
        "name": "Force State",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.frc",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "forceState",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "forceState",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 1520,
        "wires": [
            [
                "907191cad8a474c5"
            ]
        ]
    },
    {
        "id": "907191cad8a474c5",
        "type": "debug",
        "z": "7f238379090da3b0",
        "name": "Force State",
        "active": true,
        "tosidebar": false,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload.alw",
        "statusType": "auto",
        "x": 1190,
        "y": 1520,
        "wires": []
    },
    {
        "id": "ccaa29ef0f792afb",
        "type": "switch",
        "z": "7f238379090da3b0",
        "name": "Switch Charge Mode",
        "property": "chargeMode",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "off",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "fast",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "eco",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "sun",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 480,
        "y": 2080,
        "wires": [
            [
                "f06466dbd95999cd"
            ],
            [
                "179082250b81fccf"
            ],
            [
                "308a9f7880b69489"
            ],
            [
                "0d533ef8ae0d6fb1"
            ]
        ]
    },
    {
        "id": "f06466dbd95999cd",
        "type": "switch",
        "z": "7f238379090da3b0",
        "name": "Chargy != 'off'?",
        "property": "forceState",
        "propertyType": "flow",
        "rules": [
            {
                "t": "neq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 720,
        "y": 2020,
        "wires": [
            [
                "c3553e31686efde5"
            ]
        ]
    },
    {
        "id": "179082250b81fccf",
        "type": "function",
        "z": "7f238379090da3b0",
        "name": "Enable Max Charging",
        "func": "let maxA = Math.min(msg.goe.ama, msg.goe.cbl);\nlet commands = {};\n\nif(msg.goe.fsp) {\n    commands.psm = 2;\n}\n\nif (msg.goe.amp != maxA) {\n    commands.amp = maxA;\n}\n\nif (Object.keys(commands).length > 0) {\n    return { payload: commands };\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 2040,
        "wires": [
            [
                "1b591bf2c6a60c75"
            ]
        ]
    },
    {
        "id": "308a9f7880b69489",
        "type": "function",
        "z": "7f238379090da3b0",
        "name": "Calculate ECO Surplus",
        "func": "let propertyConsumption = msg.enphase.consumption - msg.goe.nrg[11];\nmsg.surplus = msg.enphase.production - Math.max(propertyConsumption, 0);\n\nlet now = new Date(msg.time);\nnode.status({ fill: \"green\", shape: \"ring\", text: \"Surplus = \" + msg.surplus.toFixed(1) + \" at \" + now.toLocaleString(\"de-DE\") });\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 2100,
        "wires": [
            [
                "42148edf51f20b50",
                "420b05a96c2315bd",
                "c02f88f071cfbc5c"
            ]
        ]
    },
    {
        "id": "0d533ef8ae0d6fb1",
        "type": "function",
        "z": "7f238379090da3b0",
        "name": "Calculate SUN Surplus",
        "func": "msg.surplus = msg.enphase.production;\n\nlet now = new Date(msg.time);\nnode.status({ fill: \"green\", shape: \"ring\", text: \"Surplus = \" + msg.surplus.toFixed(1) + \" at \" + now.toLocaleString(\"de-DE\") });\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 2160,
        "wires": [
            [
                "42148edf51f20b50",
                "420b05a96c2315bd",
                "c02f88f071cfbc5c"
            ]
        ]
    },
    {
        "id": "42148edf51f20b50",
        "type": "function",
        "z": "7f238379090da3b0",
        "name": "Charge Mode",
        "func": "let phases = msg.goe.nrg_pha === 0 ? msg.goe.pha : msg.goe.nrg_pha;\nlet maxA = 21; // Math.min(msg.goe.ama, msg.goe.cbl);\n\nlet commands = {};\nlet targetCurrent = 0;\nlet now = new Date(msg.time);\nlet lastHighSurplus = flow.get(\"lastHighSurplus\") || 0;\nlet lastLowSurplus  = flow.get(\"lastLowSurplus\")  || 0;\nlet lastPhaseSwitch = new Date(flow.get(\"lastPhaseSwitchTime\") || 0);\n\nif(msg.surplus > 1380) {\n    lastHighSurplus = now.getTime();\n    flow.set(\"lastHighSurplus\", lastHighSurplus);\n    if ((lastHighSurplus - lastLowSurplus) > (10 * 60 * 1000) && flow.get(\"forceState\") == 1) {\n        return [null, {topic: \"Surplus startup\", payload:{}}];\n    }\n} else {\n    lastLowSurplus = now.getTime();\n    flow.set(\"lastLowSurplus\", lastLowSurplus);\n    if ((lastLowSurplus - lastHighSurplus) > (10 * 60 * 1000) /*&& flow.get(\"forceState\") == 2*/) {\n        return [null, null, { topic: \"Surplus shutdown\", payload: {}}];\n    }\n}\n\nif(phases > 0) {\n    targetCurrent = Math.round(msg.surplus / phases / 230);\n    let clampedCurrent = Math.min(Math.max(targetCurrent, msg.goe.mca), maxA);\n    if(targetCurrent < msg.goe.mca && !msg.goe.fsp) {\n        let delta = now.getTime() - lastPhaseSwitch.getTime();\n        if (delta > (10 * 60 * 1000 /* 10 minutes */)) {\n            flow.set(\"lastPhaseSwitchTime\", now.getTime());\n            commands.psm = 1;\n            phases = 1\n            targetCurrent = Math.round(msg.surplus / 230);\n            commands.amp = Math.max(targetCurrent, msg.goe.mca);\n            node.log(\"Step down to single phase\");\n        } else {\n            node.log(\"single-phase requested, but too short after last switch!\");\n        }\n    } else if (targetCurrent > maxA && msg.goe.fsp) {\n        let delta = now.getTime() - lastPhaseSwitch.getTime();\n        if (delta > (1 * 60 * 1000 /* 1 minute */)) {\n            flow.set(\"lastPhaseSwitchTime\", now.getTime());\n            commands.psm = 2;\n            // TODO: use some pre-tested count of charging phases from current session store within flow\n            phases = 3;\n            targetCurrent = Math.round(msg.surplus / phases / 230);\n            commands.amp = Math.min(targetCurrent, maxA);\n            node.log(\"Step up to multi-phase\");\n        } else {\n            node.log(\"multi-phase requested, but too short after last switch!\");\n        }\n    } else if (msg.goe.amp != clampedCurrent) {\n        commands.amp = clampedCurrent;\n        node.log(\"Change charge current\");\n    }\n} else {\n    commands.psm = 1;\n    commands.amp = msg.goe.mca;\n}\n\nnode.status({ fill: \"green\", shape: \"ring\", text: \"Phases=\" + phases + \", Current=\" + targetCurrent });\n\nif (commands && Object.keys(commands).length > 0) {\n    return [{ payload: commands }];\n}",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 2160,
        "wires": [
            [
                "1b591bf2c6a60c75"
            ],
            [
                "0bbab0da93ed641b",
                "04e3531d9b72163b"
            ],
            [
                "c3553e31686efde5",
                "04e3531d9b72163b"
            ]
        ]
    },
    {
        "id": "0d07a958b387fbe2",
        "type": "change",
        "z": "7f238379090da3b0",
        "name": "Disable Charging",
        "rules": [
            {
                "t": "set",
                "p": "chargeMode",
                "pt": "msg",
                "to": "1",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1470,
        "y": 1860,
        "wires": [
            [
                "a88bc9fc9edb4e93"
            ]
        ]
    },
    {
        "id": "508ca3181197c560",
        "type": "change",
        "z": "7f238379090da3b0",
        "name": "Enable Charging",
        "rules": [
            {
                "t": "set",
                "p": "chargeMode",
                "pt": "msg",
                "to": "2",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1480,
        "y": 1820,
        "wires": [
            [
                "a88bc9fc9edb4e93"
            ]
        ]
    },
    {
        "id": "a88bc9fc9edb4e93",
        "type": "change",
        "z": "7f238379090da3b0",
        "name": "Advise Charge Mode",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"frc\": msg.chargeMode}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1720,
        "y": 1840,
        "wires": [
            [
                "6ae7f2736aaaf72e"
            ]
        ]
    },
    {
        "id": "2091764c50448087",
        "type": "switch",
        "z": "7f238379090da3b0",
        "name": "Car present?",
        "property": "goe.car",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 250,
        "y": 2080,
        "wires": [
            [
                "ccaa29ef0f792afb"
            ],
            []
        ]
    },
    {
        "id": "3cd9e6847116fc5f",
        "type": "change",
        "z": "7f238379090da3b0",
        "name": "Car Status",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.car",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "carStatus",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "carStatus",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 700,
        "wires": [
            [
                "4d851e277cad6960"
            ]
        ]
    },
    {
        "id": "b4df3bea72f538e2",
        "type": "debug",
        "z": "7f238379090da3b0",
        "name": "Enphase Status",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "\"prod: \" & msg.enphase.production &\t\", cons: \" & msg.enphase.consumption",
        "statusType": "jsonata",
        "x": 520,
        "y": 480,
        "wires": []
    },
    {
        "id": "ded68cf96bd7ceae",
        "type": "delay",
        "z": "7f238379090da3b0",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 220,
        "y": 440,
        "wires": [
            [
                "b4df3bea72f538e2",
                "512d67a351bbe98a",
                "2b59ae34bd5fe3d7"
            ]
        ]
    },
    {
        "id": "420b05a96c2315bd",
        "type": "debug",
        "z": "7f238379090da3b0",
        "name": "Inspect Go-E Status",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1140,
        "y": 2100,
        "wires": []
    },
    {
        "id": "2b59ae34bd5fe3d7",
        "type": "change",
        "z": "7f238379090da3b0",
        "name": "Set E-Go filter",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{     \"filter\": \"alw,amp,fsp,frc,car,cbl,pha,ama,nrg,nrg,mca,wh,eto\" }",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 700,
        "wires": [
            [
                "abeafa1098dbbe39"
            ]
        ]
    },
    {
        "id": "6ae7f2736aaaf72e",
        "type": "rbe",
        "z": "7f238379090da3b0",
        "name": "Payload updated?",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 1730,
        "y": 2060,
        "wires": [
            [
                "2ab4b97a56ab922d",
                "77c05377fc1ee1f2"
            ]
        ]
    },
    {
        "id": "304ba7103ba755d4",
        "type": "change",
        "z": "7f238379090da3b0",
        "name": "Store to context",
        "rules": [
            {
                "t": "set",
                "p": "pvPower",
                "pt": "flow",
                "to": "payload.production",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "consumption",
                "pt": "flow",
                "to": "payload.consumption",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "enphase",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 280,
        "wires": [
            [
                "ded68cf96bd7ceae"
            ]
        ]
    },
    {
        "id": "ec22ca925c6e938d",
        "type": "function",
        "z": "7f238379090da3b0",
        "name": "reconstruct data",
        "func": "// Influx:\n// If msg.payload is an array containing two objects, \n// the first object will be written as the set of \n// named fields, the second is the set of named tags.\n\n//{\n//    \"payload\": {\n//        \"alw\": true,\n//        \"eto\": 281606,\n//        \"ama\": 32,\n//        \"amp\": 14,\n//        \"fsp\": false,\n//        \"frc\": 0,\n//        \"car\": 1,\n//        \"cbl\": 20,\n//        \"pha\": 0,\n//        \"wh\": 9213.655,\n//        \"nrg\": [\n//            237.15,\n//            237.77,\n//            238.39,\n//            2.48,\n//            0,\n//            0,\n//            0,\n//            0,\n//            0,\n//            0,\n//            0,\n//            0,\n//            0,\n//            0,\n//            0,\n//            0\n//        ],\n//        \"mca\": 6,\n//        \"nrg_pha\": 0\n//    },\n//    \"topic\": \"\",\n//    \"_msgid\": \"9517f3eb466dbf5a\",\n//    \"statusCode\": 200,\n//    \"responseUrl\": \"http://lemmy2:5080/api/status?filter=alw%2Camp%2Cfsp%2Cfrc%2Ccar%2Ccbl%2Cpha%2Cama%2Cnrg%2Cnrg%2Cmca%2Cwh%2Ceto\",\n//    \"redirectList\": [],\n//    \"retry\": 0,\n//    \"time\": 1688928474000,\n//    \"_event\": \"node:3602cfb264d30dd5\",\n//    \"enphase\": {\n//        \"production\": 664.825,\n//        \"consumption\": 275.92,\n//        \"netConsumption\": -388.906\n//    },\n//    \"headers\": {\n//        \"content-type\": \"application/json\",\n//        \"transfer-encoding\": \"chunked\",\n//        \"connection\": \"close\",\n//        \"access-control-allow-origin\": \"*\",\n//        \"x-node-red-request-node\": \"55df432c\"\n//    }\n//}\n\nlet fields = {\n  \"activePhases\": (msg.payload.pha),\n  \"chargePower\": (msg.payload.nrg[11]),\n  \"chargeCurrent\": (msg.payload.amp),\n  \"forceSinglePhase\": (msg.payload.fsp ? 1 : 0),\n  \"chargingPhases\": (msg.payload.nrg_pha),\n  \"time\": (msg.time)\n};\n\nlet tags = {\n  \"topic\": (\"go-e\")\n};\n\nmsg.payload = [fields,tags]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 1460,
        "wires": [
            [
                "53563ffd123f2b85"
            ]
        ]
    },
    {
        "id": "53563ffd123f2b85",
        "type": "influxdb out",
        "z": "7f238379090da3b0",
        "influxdb": "61e1038ad2a9bd11",
        "name": "Influxdb go-echarger",
        "measurement": "go_echarger",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "SloBloLabs",
        "bucket": "smarthome",
        "x": 300,
        "y": 1520,
        "wires": []
    },
    {
        "id": "6d2af25d8bb89a3d",
        "type": "link in",
        "z": "7f238379090da3b0",
        "name": "Receive Charge Mode from UI",
        "links": [
            "2dc1beca5ddc0848"
        ],
        "x": 785,
        "y": 1820,
        "wires": [
            [
                "172291b267e64546"
            ]
        ]
    },
    {
        "id": "2449ba03868ff762",
        "type": "link out",
        "z": "7f238379090da3b0",
        "name": "Send Charge Mode to UI",
        "mode": "link",
        "links": [
            "74da848988fb3c79"
        ],
        "x": 925,
        "y": 1640,
        "wires": []
    },
    {
        "id": "7459187132bf8080",
        "type": "link out",
        "z": "7f238379090da3b0",
        "name": "Send Enable Charging to UI",
        "mode": "link",
        "links": [
            "11cc229899756a86"
        ],
        "x": 1305,
        "y": 1840,
        "wires": []
    },
    {
        "id": "c02f88f071cfbc5c",
        "type": "link out",
        "z": "7f238379090da3b0",
        "name": "Send Surplus to UI",
        "mode": "link",
        "links": [
            "be2f6af7761aea5f",
            "fc06a0e8535b07a6"
        ],
        "x": 955,
        "y": 2080,
        "wires": []
    },
    {
        "id": "7800c66d240f1e37",
        "type": "link out",
        "z": "7f238379090da3b0",
        "name": "Send go-e Status to UI",
        "mode": "link",
        "links": [
            "1fffd54dd1b73a83",
            "f4d453b181af8740"
        ],
        "x": 375,
        "y": 1320,
        "wires": []
    },
    {
        "id": "1b591bf2c6a60c75",
        "type": "switch",
        "z": "7f238379090da3b0",
        "name": "Chargy != 'on'?",
        "property": "forceState",
        "propertyType": "flow",
        "rules": [
            {
                "t": "neq",
                "v": "2",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1400,
        "y": 2100,
        "wires": [
            [
                "0bbab0da93ed641b"
            ],
            [
                "6ae7f2736aaaf72e"
            ]
        ]
    },
    {
        "id": "0bbab0da93ed641b",
        "type": "change",
        "z": "7f238379090da3b0",
        "name": "Enable Charging",
        "rules": [
            {
                "t": "set",
                "p": "payload.frc",
                "pt": "msg",
                "to": "2",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1420,
        "y": 1940,
        "wires": [
            [
                "6ae7f2736aaaf72e"
            ]
        ]
    },
    {
        "id": "c3553e31686efde5",
        "type": "change",
        "z": "7f238379090da3b0",
        "name": "Disable Charging",
        "rules": [
            {
                "t": "set",
                "p": "payload.frc",
                "pt": "msg",
                "to": "1",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1430,
        "y": 2000,
        "wires": [
            [
                "6ae7f2736aaaf72e"
            ]
        ]
    },
    {
        "id": "04e3531d9b72163b",
        "type": "debug",
        "z": "7f238379090da3b0",
        "name": "Auto break/spawn",
        "active": false,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1420,
        "y": 2180,
        "wires": []
    },
    {
        "id": "61e1038ad2a9bd11",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "database",
        "name": "influx envoy",
        "usetls": false,
        "tls": "a0af54c0.3a7438",
        "influxdbVersion": "2.0",
        "url": "http://localhost:8086",
        "rejectUnauthorized": false,
        "credentials": {}
    },
    {
        "id": "a0af54c0.3a7438",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": false,
        "alpnprotocol": ""
    }
]